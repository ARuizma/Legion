runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df()
runApp()
df()
xCol
xCol()
var
var()
df$input$xcol
df <- df()
df
df$input$xcol
df[[xCol]]
df[[xCol()]]
runApp()
df()
var()
log10(var())
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
df
df()
DFunction()
help(aggregate)
runApp()
runApp()
df()
DFunction()
runApp()
df()
dat
DFunction
DFunction()
runApp()
DFunction
DFunction()
runApp()
runApp()
DFunction
DFunction()
runApp()
DFunction()
runApp()
DFunction
DFunction()
xCol
dat[xCol]
dat[[xCol]]
runApp()
dat
df()[[xCol]]
df()
df()[xCol]
compoundCol
compoundCol()
df()
runApp()
DFunction
DFunction()
DFunction()
dat
runApp()
DFunction()
df()[[xCol]]
df[[xCol]]
runApp()
df[[xCol]]
df[[x]]
df()
DFunction()
runApp()
DFunction()
runApp()
runApp()
DFunction()
runApp()
DFunction()
runApp()
dat2()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
DFunction
DFunction()
runApp()
DFunction()
runApp()
DFunction()
dat2()
DFunction()[[compoundCol]]
DFunction
dat2
dat2()
DFunction
runApp()
runApp()
runApp()
DFunction()
dat2()
DFunction()
DFunction <- DFunction()
DFunction
DFunction[[compoundCol]]
DFunction
DFunction[[Compound]]
DFunction$input$zcol
runApp()
dat2()
runApp()
runApp()
dat2()
DFunction
DFunction[[compoundCol]]
str(DFunction)
DFunction$Compound
DFunction[Compound]
DFunction[[Compound]]
runApp()
dat2()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dat
df()
names(df())
dat
df()$yCol
runApp()
runApp()
runApp()
names(df())
names(df()[[yCol]])
df()[[yCol]]
df()[yCol]
df()$input$ycol
df
df()
names(df())
df5 <- df()
df5
names(df5)
df5[[yCol]]
names(df5) == yCol
yCol
yCol(df())
runApp()
df5 <- df()
df5
names(df5)[names(df5) == yCol]
runApp()
yCol
dat
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dat
yCol
dat[[yCol]]
dat$yCol
names(dat)
names(dat[3])
runApp()
feature
feature()
input$ycol
names(input$ycol)
runApp()
input$ycol
shiny::runApp()
runApp()
runApp()
install.packages("minpack.lm")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dat
df2
DAT
dat
dat2
var
nplr_df
nls_df
dat
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x
Q
runApp()
runApp()
runApp()
runApp()
runApp()
dat
dat2
runApp()
runApp()
runApp()
runApp()
runApp()
dat
dat2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sumi
sumi$npar
sumi$params.bottom
sumi
sumi$nar
sumi$npar
npar
str(sumi)
s <- as.list(sumi)
sumi
runApp()
runApp()
sumi
sumi[[npar]]
sumi
sumi[[value]][[npar]]
sumi$value
sumir$value·npar
sumi$value$npar
sumi$value[[npar]]
sumi$npar
sumi$value[[params.s]]
sumi$value
str(sumi$value)
str(sumi)
levels_split <- strsplit(levels(sumi$value), ",")
levels_split
lapply(levels_split, as.numeric)
s <- lapply(levels_split, as.numeric)
lapply(levels_split, as.numeric)
s <- lapply(levels_split, as.numeric)
runApp()
runApp()
runApp()
df2
names(df2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sumi
df2
i
names(df2)
df2
sumi
names(i)
runApp()
runApp()
runApp()
runApp()
runApp()
names(df2)
i
names(df2$i)
names(i)
as.names(i)
as.name(i=
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fit.parameters
fit.parameters$Compound
fit.parameters$Compound <- names(df2)
fit.parameters
df2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nlss
str(nlss)
str(nplrs)
nplrs
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help(do.call)
runApp()
runApp()
runApp()
runApp()
runApp()
instal.packages("compare")
install.packages("compare")
runApp()
runApp()
mySummary.nplr
mySummary.nls
mySummary
mySummary <- compare(mySummary.nplr, mySummary.nls, allowAll = TRUE)}
mySummary <- compare(mySummary.nplr, mySummary.nls, allowAll = TRUE)
mySummary
mySummary <- do.call("rbind",list(mySummary.nplr, mySummary.nls))
mySummary
runApp()
runApp()
runApp()
runApp()
mySummary.nls
mySummary.nplr
mySummary <- do.call("rbind",list(mySummary.nplr, mySummary.nls))
str(mySummary.nplr)
str(mySummary.nls)
runApp()
mySummary.nplr
str(mySummary.nplr)
runApp()
runApp()
runApp()
mySummary.nplr
str(mySummary.nplr)
mySummary <- do.call("rbind",list(mySummary.nplr, mySummary.nls))
mySummary
runApp()
str(mySummaryç
)
str(mySummary.nplr)
mySummary <- do.call("rbind",list(mySummary.nplr, mySummary.nls))
mySummary
runApp()
runApp()
runApp()
runApp()
